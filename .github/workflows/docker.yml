name: Publish Docker image

on:
  push:
  schedule:
    - cron: '0 0 * * *' # Runs at midnight every day

jobs:
  check-new-release:
    runs-on: ubuntu-latest
    outputs:
      cura_version: ${{ steps.latest_version.outputs.LATEST_VERSION }}
      update_needed: ${{ steps.compare_versions.outputs.update_needed }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Get the current Ultimaker Cura version from file
        run: echo "CURRENT_CURA_VERSION=$(cat current_cura_version)" >> $GITHUB_ENV
      
      - name: Get latest Ultimaker Cura release tag
        id: latest_version
        run: |
          latest_release=$(curl -s https://api.github.com/repos/Ultimaker/Cura/releases/latest | jq -r '.tag_name')
          echo "Latest release: $latest_release"
          echo "::set-output name=LATEST_VERSION::$latest_release"
      
      - name: Compare versions and determine if an update is needed
        id: compare_versions
        run: |
          if [[ "$LATEST_VERSION" > "$CURRENT_CURA_VERSION" ]]; then
            echo "New Ultimaker Cura version available: $LATEST_VERSION"
            echo "$LATEST_VERSION" > current_cura_version
            git config --global user.name 'GitHub Actions'
            git config --global user.email 'actions@github.com'
            git add current_cura_version
            git commit -m "Update Ultimaker Cura version to $LATEST_VERSION"
            git push
            echo "::set-output name=update_needed::true"
          else
            echo "Ultimaker Cura is up-to-date with version $CURRENT_CURA_VERSION"
            echo "::set-output name=update_needed::false"
          fi

      - name: Force update on manual push
        if: github.event_name == 'push'
        id: set_update_needed
        run: echo "::set-output name=update_needed::true"

  build-and-push-image:
    name: Build and push docker image to ghcr.io
    needs: check-new-release
    if: needs.check-new-release.outputs.update_needed == 'true'
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    
    - name: Log in to the container registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push docker images
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ghcr.io/doganm95/cura-evolved:${{ needs.check-new-release.outputs.cura_version }}
          ghcr.io/doganm95/cura-evolved:${{ github.sha }}
          ghcr.io/doganm95/cura-evolved:latest
        labels: |
          org.opencontainers.image.source=${{ github.repository_url }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.version=${{ needs.check-new-release.outputs.cura_version }}
