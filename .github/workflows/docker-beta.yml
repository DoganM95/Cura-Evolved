name: Publish beta docker image

on:
  push:
    paths-ignore:
      - 'README.md'
  schedule:
    - cron: '0 0 * * *' # Runs at midnight every day

jobs:
  check-new-release:
    runs-on: ubuntu-latest
    outputs:
      cura_version: ${{ steps.compare_and_update_cura.outputs.cura_version }}
      should_continue: ${{ steps.set_should_continue.outputs.should_continue }}
    steps:
      - name: check_out_repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Read current Cura version from file
        id: read_version
        run: |
          CURRENT_CURA_VERSION=$(cat current_cura_version)
          echo "CURRENT_CURA_VERSION=$CURRENT_CURA_VERSION" >> $GITHUB_ENV
          echo "Current version: $CURRENT_CURA_VERSION"

      - name: Get latest Cura release tag
        id: get_latest_version
        run: |
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/Ultimaker/Cura/releases/latest | jq -r '.tag_name')
          echo "LATEST_RELEASE=$LATEST_RELEASE" >> $GITHUB_ENV
          echo "Latest release: $LATEST_RELEASE"
      
      - name: Compare versions and update if needed
        id: compare_and_update_cura
        run: |
          LATEST_RELEASE_NUMBER=$(echo "$LATEST_RELEASE" | tr -d '.')
          echo "LATEST_RELEASE_NUMBER=$LATEST_RELEASE_NUMBER" >> $GITHUB_ENV
          
          CURRENT_CURA_VERSION_NUMBER=$(echo "$CURRENT_CURA_VERSION" | tr -d '.')
          echo "CURRENT_CURA_VERSION_NUMBER=$CURRENT_CURA_VERSION_NUMBER" >> $GITHUB_ENV
          
          echo "Comparing $LATEST_RELEASE_NUMBER with $CURRENT_CURA_VERSION_NUMBER"
          # Check if the variables are empty
          if [ -z "$LATEST_RELEASE_NUMBER" ] || [ -z "$CURRENT_CURA_VERSION_NUMBER" ]; then
            echo "One or both version numbers are empty."
            exit 1
          fi
          echo "Debug: LATEST_RELEASE_NUMBER=$LATEST_RELEASE_NUMBER, CURRENT_CURA_VERSION_NUMBER=$CURRENT_CURA_VERSION_NUMBER"
          if [ "$LATEST_RELEASE_NUMBER" -gt "$CURRENT_CURA_VERSION_NUMBER" ]; then
            echo "Updating to new version: $LATEST_RELEASE"
            echo "$LATEST_RELEASE" > current_cura_version
            git config --global user.name 'actions-user'
            git config --global user.email 'actions@github.com'
            git add current_cura_version
            git commit -m "Update Cura to $LATEST_RELEASE"
            git push 
            echo "cura_version=$LATEST_RELEASE" >> $GITHUB_OUTPUT
          else
            echo "No new version to update. Current version is up to date."
            # Set the output even if the condition is not met
            echo "cura_version=$CURRENT_CURA_VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Set should continue
        id: set_should_continue
        run: |
          SHOULD_CONTINUE="true"
          if [ "${{ github.event_name }}" == "schedule" ]; then
            if [ ! "$LATEST_RELEASE_NUMBER" -gt "$CURRENT_CURA_VERSION_NUMBER" ]; then
              SHOULD_CONTINUE="false"
            fi
          fi
          echo "should_continue=$SHOULD_CONTINUE" >> $GITHUB_OUTPUT

  build-and-push-image:
    name: Build and push docker image to ghcr.io
    needs: check-new-release
    if: needs.check-new-release.outputs.should_continue == 'true'
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check previous jobs output
        run: |
          echo "latest_release: $LATEST_RELEASE"
          echo "$needs.check-new-release.outputs.cura_version: ${{ needs.check-new-release.outputs.cura_version }}"
    
      - name: Check out the repo
        uses: actions/checkout@v4
      
      - name: Log in to the container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/doganm95/cura-evolved:${{ needs.check-new-release.outputs.cura_version }}-${{ github.run_number }}
            ghcr.io/doganm95/cura-evolved:${{ github.sha }}
            ghcr.io/doganm95/cura-evolved:latest
          labels: |
            org.opencontainers.image.source=${{ github.repository_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ needs.check-new-release.outputs.cura_version }}
